and :op1 ( begin :arg1 it :arg2 ( thing :wiki massachuset@@ ts_@@ health_@@ care_@@ reform :name ( name :op1 romne@@ y@@ care ) ) ) :op2 ( end :arg1 it :arg2 thing )
run :arg0 ( person :wiki mitt_romney :name ( name :op1 romney ) ) :arg1 nominate :arg2 away :condition ( push :polarity - :arg0 ( person :wiki barack_obama :name ( name :op1 obama ) ) :arg1 ( thing :wiki patient_protection_and_affordable_care_act :name ( name :op1 obaminationcare ) ) :time ever )
funny :domain ( consider :arg1 ( option :mod ( conservative :degree most ) :domain he ) :time ( date-entity :year 2008 ) )
say :arg0 ( all :consist-of ( and :op1 ( person :wiki rush_limbaugh :name ( name :op1 rush ) ) :op2 ( person :wiki mark_@@ levin :name ( name :op1 levin ) ) :op3 ( person :wiki sean_hannity :name ( name :op1 hannity ) ) :op4 ( person :wiki michael_@@ savage :name ( name :op1 savage ) ) :op5 et-cetera ) ) :arg1 ( candidate :mod conservative :domain ( person :wiki mitt_romney :name ( name :op1 romney ) ) )
and :op1 ( fa@@ st@@ forward :arg4 ( date-entity :year 2012 ) ) :op2 ( candidate :arg1-of liberal :domain he :time now )
change :arg1 nothing :arg2-of ( except :arg1 ( pass :arg2 ( law :wiki patient_protection_and_affordable_care_act :name ( name :op1 obaminationcare ) ) ) )
think :arg0 i :arg1 ( draw :arg0 you :arg1 ( interpret :arg0 you :arg1 ( date-entity :year 2008 ) :arg2-of wrong ) )
conservative :polarity - :degree most :domain ( person :wiki mike_huckabee :name ( name :op1 huckabee ) )
and :op1 ( sincere :domain ( person :wiki mike_huckabee :name ( name :op1 huckabee ) ) )
forget :arg0 you :arg1 ( thing :topic ( head :arg0-of talk :mod all :mod that ) :domain ( pay :arg0 ( corporation :mod big ) :arg2 head ) )